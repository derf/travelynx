% if (is_user_authenticated()) {
	% if (stash('error')) {
		<div class="row">
			<div class="col s12">
				<div class="card caution-color">
					<div class="card-content white-text">
						<span class="card-title">Backend-Fehler</span>
						<p><%= stash('error') %></p>
					</div>
				</div>
			</div>
		</div>
	% }
	<div class="row">
		<div class="col s12 statuscol">
			% my $status = get_user_status();
			% if ($status->{checked_in}) {
				%= include '_checked_in', journey => $status;
			% }
			% elsif ($status->{cancelled}) {
				<div class="card info-color">
					<div class="card-content">
						<span class="card-title">Zugausfall dokumentieren</span>
						<p>Prinzipiell wärest du nun eingecheckt in
							<%= $status->{train_type} %> <%= $status->{train_no} %>
							ab <%= $status->{dep_name} %>, doch dieser Zug fällt aus.
							</p>
						<p>Falls du den Zugausfall z.B. für ein Fahrgastrechteformular
							dokumentieren möchtest, wähle bitte jetzt die geplante
							Zielstation aus.</p>
						<table>
							<tbody>
								% my $is_after = 0;
								% for my $station (@{$status->{route_after}}) {
									<tr><td><a class="action-cancelled-to" data-station="<%= $station->[0] %>"><%= $station->[0] %></a></td></tr>
								% }
							</tbody>
						</table>
					</div>
					<div class="card-action">
						<a class="action-undo" data-id="in_transit">
							<i class="material-icons">undo</i> Checkinversuch Rückgängig?
						</a>
					</div>
				</div>
			% }
			% else {
				<div class="card">
					<div class="card-content">
						<span class="card-title">Hallo, <%= current_user->{name} %>!</span>
						<p>Du bist gerade nicht eingecheckt.</p>
						<div class="geolocation">
							<button class="btn waves-effect waves-light btn-flat">Stationen in der Umgebung abfragen</button>
						</div>
						%= form_for 'list_departures' => begin
							<div class="input-field">
								%= text_field 'station', id => 'station', class => 'autocomplete contrast-color-text', autocomplete => 'off', required => undef
								<label for="station">Manuelle Eingabe (Name oder DS100)</label>
							</div>
							<div class="center-align">
								<button class="btn waves-effect waves-light btn-flat" type="submit" name="action" value="departures">
									<i class="material-icons left" aria-hidden="true">send</i>
									Abfahrten
								</button>
							</div>
						%= end
					</div>
				</div>
			% }
		</div>
	</div>
	<h1>Letzte Fahrten</h1>
	%= include '_history_trains', date_format => '%d.%m', journeys => [journeys->get(uid => current_user->{id}, limit => 5, with_datetime => 1)];
% }
% else {
	<div class="row">
		<div class="col s12">
			<p>
				Travelynx erlaubt das Einchecken in Züge im Netz der Deutschen
				Bahn. So können die eigenen Fahrten später inklusive Echtzeitdaten
				und eingetragenen Servicemeldungen nachvollzogen und brennende
				Fragen wie „Wie viele Stunden habe ich letzten Monat im Zug
				verbracht?“ beantwortet werden.
			</p>
			<p>
				Die Idee dazu kommt von <a
				href="https://traewelling.de/">Träwelling</a>.
			</p>
			<p>
				Features:
				<ul>
					<li>Protokoll von Fahrplan- und Echtzeitdaten an Start- und
						Zielbahnhof</li>
					<li>Web-Hooks und <a href="/api">API</a> zum automatisierten Einchecken und Auslesen des aktuellen Status</li>
					<li>Statistiken über Reisezeiten und Verspätungen</li>
					<li>Unterstützung beim Ausfüllen von Fahrgastrechteformularen</li>
					<li>Optional: Öffentliches Profil und Reisestatus</li>
					<li>Optional: Verknüpfung mit Träwelling</li>
				</ul>
			</p>
			<p>
				Travelynx ist ein kostenfreies, privat betriebenes Projekt ohne
				Verfügbarkeitsgarantie. Unangekündigte Downtimes oder eine
				kurzfristige Einstellung dieser Seite sind nicht vorgesehen, aber
				möglich. Wer mag, kann auch den
				<a href="https://finalrewind.org/projects/travelynx">Quelltext</a>
				laden und eine eigene Instanz aufsetzen.
			</p>
		</div>
	</div>
	<div class="row">
		<div class="col s1 m1 l3">
		</div>
		<div class="col s10 m10 l6 center-align">
			% if (not app->config->{registration}{disabled}) {
				<a href="/register" class="waves-effect waves-light btn"><i class="material-icons left" aria-hidden="true">add</i>Registrieren</a>
			% }
			<a href="/login" class="waves-effect waves-light btn"><i class="material-icons left" aria-hidden="true">account_circle</i>Anmelden</a>
		</div>
		<div class="col s1 m1 l3">
		</div>
	</div>
% }

%= include '_footer', version => stash('version')
