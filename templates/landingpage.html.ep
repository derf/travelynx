% if (is_user_authenticated()) {
	% my $status = stash('user_status');
	% if (stash('error')) {
		<div class="row">
			<div class="col s12">
				<div class="card caution-color">
					<div class="card-content white-text">
						<span class="card-title">Backend-Fehler</span>
						<p><%= stash('error') %></p>
					</div>
				</div>
			</div>
		</div>
	% }
	<div class="row">
		<div class="col s12 statuscol">
			% if ($status->{checked_in}) {
				%= include '_checked_in', journey => $status, journey_visibility => stash('journey_visibility');
			% }
			% elsif ($status->{cancelled}) {
				% if ( @{stash('timeline') // [] } ) {
					%= include '_timeline_link', timeline => stash('timeline')
				% }
				<div class="card info-color">
					<div class="card-content">
						<span class="card-title">Ausfall dokumentieren</span>
						<p>Prinzipiell wärest du nun eingecheckt in
							%= include '_format_train', journey => $status, mode => 'status'
							ab <%= $status->{dep_name} %>, doch diese Fahrt fällt aus.
						</p>
						<p>Falls du den Ausfall z.B. für Fahrgastrechte
							dokumentieren möchtest, wähle bitte jetzt das
							vorgesehene Ziel aus.</p>
						<table>
							<tbody>
								% my $is_after = 0;
								% for my $station (@{$status->{route_after}}) {
									<tr><td><a class="action-cancelled-to" data-station="<%= $station->[0] %>"><%= $station->[0] %></a></td></tr>
								% }
							</tbody>
						</table>
					</div>
					<div class="card-action">
						<a class="action-undo" data-id="in_transit">
							<i class="material-icons">undo</i> Checkinversuch Rückgängig?
						</a>
					</div>
				</div>
			% }
			% else {
				% if ( @{stash('timeline') // [] } ) {
					%= include '_timeline_link', timeline => stash('timeline')
				% }
				<div class="card">
					<div class="card-content">
						<span class="card-title">Hallo, <%= current_user->{name} %>!</span>
						<p>Du bist gerade nicht eingecheckt.</p>
						<div class="geolocation" data-recent="<%= join('|', map { $_->{eva} . ';' . $_->{name} . ';' . $_->{hafas} } @{stash('recent_targets') // []} ) %>">
							<button class="btn waves-effect waves-light btn-flat">Stationen in der Umgebung abfragen</button>
						</div>
						%= form_for 'list_departures' => begin
							<div class="input-field">
								%= text_field 'station', id => 'station', class => 'autocomplete contrast-color-text', autocomplete => 'off', required => undef
								<label for="station">Manuelle Eingabe</label>
							</div>
							<div class="center-align">
								<button class="btn waves-effect waves-light btn-flat" type="submit" name="action" value="departures">
									<i class="material-icons left" aria-hidden="true">send</i>
									Abfahrten
								</button>
							</div>
						%= end
					</div>
				</div>
			% }
		</div>
	</div>
	<h2 style="margin-left: 0.75rem;">Letzte Fahrten</h2>
	%= include '_history_trains', date_format => '%d.%m.%Y', journeys => [journeys->get(uid => current_user->{id}, limit => 5, with_datetime => 1)];
% }
% else {
	<div class="row">
		<div class="col s12">
			<p>
				Travelynx erlaubt das Einchecken in Züge im Netz der Deutschen
				Bahn. So können die eigenen Fahrten später inklusive Echtzeitdaten
				und eingetragenen Servicemeldungen nachvollzogen und brennende
				Fragen wie „Wie viele Stunden war ich letzten Monat unterwegs?“
				beantwortet werden.
			</p>
			<p>
				Die Idee dazu kommt von <a
				href="https://traewelling.de/">Träwelling</a>.
			</p>
			<p>
				Features:
				<ul>
					<li>Protokoll von Fahrplan- und Echtzeitdaten an Start- und
						Zielbahnhof</li>
					<li>Teilen von aktuellen und vergangenen Fahrten mit anderen Personen</li>
					<li>Web-Hooks und <a href="/api">API</a> zum automatisierten Einchecken und Auslesen des aktuellen Status</li>
					<li>Statistiken über Reisezeiten und Verspätungen</li>
					<li>Unterstützung beim Ausfüllen von Fahrgastrechteformularen</li>
					<li>Optional: Öffentlicher Reisestatus und öffentliche Angaben zu vergangenen Fahrten</li>
					<li>Optional: Verknüpfung mit Träwelling</li>
				</ul>
			</p>
			<p>
				Travelynx ist ein kostenfreies, privat betriebenes Projekt ohne
				Verfügbarkeitsgarantie. Unangekündigte Downtimes oder eine
				kurzfristige Einstellung dieser Seite sind nicht vorgesehen, aber
				möglich. Wer mag, kann auch den
				<a href="https://finalrewind.org/projects/travelynx">Quelltext</a>
				laden und eine eigene Instanz aufsetzen.
			</p>
		</div>
	</div>
	<div class="row">
		<div class="col s1 m1 l3">
		</div>
		<div class="col s10 m10 l6 center-align">
			% if (not app->config->{registration}{disabled}) {
				<a href="/register" class="waves-effect waves-light btn"><i class="material-icons left" aria-hidden="true">add</i>Registrieren</a>
			% }
			<a href="/login" class="waves-effect waves-light btn"><i class="material-icons left" aria-hidden="true">account_circle</i>Anmelden</a>
		</div>
		<div class="col s1 m1 l3">
		</div>
	</div>
% }
